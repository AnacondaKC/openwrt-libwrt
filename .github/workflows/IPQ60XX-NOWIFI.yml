# ====================================================================================
#  最终完美版 OpenWrt 编译流程 (v3 - 吸收亮点)
#  新增了自动提取内核版本并在发布时展示的功能。
# ====================================================================================
name: Build OpenWrt for IPQ60XX-NOWIFI

on:
  workflow_dispatch:

env:  
  REPO_URL: https://github.com/LiBwrt/openwrt-6.x.git
  REPO_BRANCH: k6.12-nss
  CONFIG_FILE: configs/IPQ60XX-NOWIFI.config
  CUSTOM_FEEDS_CONF: feeds/IPQ60XX-NOWIFI-feeds.txt
  INIT_SETTINGS_SCRIPT: scripts/IPQ60XX-NOWIFI-settings.sh
  CACHE_TOOLCHAIN: true
  FIRMWARE_RELEASE: true
  FIRMWARE_TAG: IPQ60XX-NOWIFI
  TZ: Asia/Shanghai

jobs:
  Build:
    runs-on: ubuntu-22.04
    steps:
    # ...（步骤 1, 2, 3 完全不变）

    - name: 4. 克隆OpenWrt源码 (Clone Source Code)
      run: |
        git clone --depth 1 $REPO_URL -b $REPO_BRANCH openwrt
        echo "OPENWRT_PATH=$PWD/openwrt" >> $GITHUB_ENV
        cd openwrt
        VERSION_INFO=$(git show -s --date=short --format="作者: %an<br/>时间: %cd<br/>内容: %s<br/>hash: %H")
        echo "VERSION_INFO=$VERSION_INFO" >> $GITHUB_ENV
        # 【新增亮点】从Makefile中自动提取内核版本号
        # 我们使用更健壮的路径来查找，而不是硬编码
        VERSION_KERNEL=$(grep -oP 'LINUX_KERNEL_HASH-\K[0-9]+\.[0-9]+' target/linux/qualcommax/Makefile | head -n 1)
        echo "VERSION_KERNEL=$VERSION_KERNEL" >> $GITHUB_ENV

    # ...（步骤 5, 6, 7, 8, 9, 10 完全不变，逻辑正确无需修改）
    - name: 5. 加载自定义内容并生成最终.config (Load Custom Feeds, Scripts & Config)
      run: |
        if [ -f "$CUSTOM_FEEDS_CONF" ]; then
          cat $CUSTOM_FEEDS_CONF >> ${{ env.OPENWRT_PATH }}/feeds.conf.default
        fi
        if [ -f "$INIT_SETTINGS_SCRIPT" ]; then
          mkdir -p ${{ env.OPENWRT_PATH }}/files/etc/uci-defaults
          cp $INIT_SETTINGS_SCRIPT ${{ env.OPENWRT_PATH }}/files/etc/uci-defaults/99-init-settings
        fi
        cp $CONFIG_FILE ${{ env.OPENWRT_PATH }}/.config
        cd ${{ env.OPENWRT_PATH }}
        ./scripts/feeds update -a
        ./scripts/feeds install -a
        make defconfig
    - name: 6. 生成环境变量 (Generate Variables)
      run: |
        cd ${{ env.OPENWRT_PATH }}
        SOURCE_REPO="$(echo $REPO_URL | awk -F '/' '{print $(NF)}')"
        echo "SOURCE_REPO=$SOURCE_REPO" >> $GITHUB_ENV
        DEVICE_TARGET=$(grep CONFIG_TARGET_BOARD .config | awk -F'"' '{print $2}')
        echo "DEVICE_TARGET=$DEVICE_TARGET" >> $GITHUB_ENV
        DEVICE_SUBTARGET=$(grep CONFIG_TARGET_SUBTARGET .config | awk -F'"' '{print $2}')
        echo "DEVICE_SUBTARGET=$DEVICE_SUBTARGET" >> $GITHUB_ENV
        CONFIG_HASH=$(sha256sum .config | awk '{print $1}')
        echo "CONFIG_HASH=$CONFIG_HASH" >> $GITHUB_ENV
    - name: 7. 缓存工具链 (Cache Toolchain)
      if: env.CACHE_TOOLCHAIN == 'true'
      uses: HiGarfield/cachewrtbuild@main
      with:
        ccache: false
        mixkey: ${{ env.SOURCE_REPO }}-${{ env.REPO_BRANCH }}-${{ env.DEVICE_TARGET }}-${{ env.DEVICE_SUBTARGET }}-${{ env.CONFIG_HASH }}
        prefix: ${{ env.OPENWRT_PATH }}
    - name: 8. 下载DL软件包 (Download DL Package)
      run: |
        cd ${{ env.OPENWRT_PATH }}
        make download -j8
        find dl -size -1024c -exec rm -f {} \;
    - name: 9. 开始编译固件 (Compile Firmware)
      id: compile
      run: |
        cd ${{ env.OPENWRT_PATH }}
        echo "开始 $(nproc) 线程编译..."
        make -j$(nproc) || make -j1 V=s
        echo "status=success" >> $GITHUB_OUTPUT
        echo "DATE=$(date +"%Y-%m-%d %H:%M")" >> $GITHUB_ENV
        echo "FILE_DATE=$(date +"%Y.%m.%d")" >> $GITHUB_ENV
    - name: 10. 整理文件用于发布 (Organize Files for Release)
      if: steps.compile.outputs.status == 'success'
      run: |
        FIRMWARE_DIR="${{ env.OPENWRT_PATH }}/bin/targets/${{ env.DEVICE_TARGET }}/${{ env.DEVICE_SUBTARGET }}"
        echo "FIRMWARE_PATH=$FIRMWARE_DIR" >> $GITHUB_ENV
        cd $FIRMWARE_DIR
        cp ${{ env.OPENWRT_PATH }}/.config build.config
        rm -rf packages feeds.buildinfo version.buildinfo sha256sums

    - name: 11. 发布固件到Release (Upload Firmware To Release)
      if: steps.compile.outputs.status == 'success' && env.FIRMWARE_RELEASE == 'true'
      uses: ncipollo/release-action@v1
      with:
        name: R${{ env.DATE }} for ${{ env.FIRMWARE_TAG }}
        allowUpdates: true
        tag: ${{ env.FIRMWARE_TAG }}
        token: ${{ secrets.GITHUB_TOKEN }}
        artifacts: ${{ env.FIRMWARE_PATH }}/*
        body: |
          **This is OpenWrt Firmware for ${{ env.FIRMWARE_TAG }}**
          ### 📒 固件信息
          - 平台: `${{ env.FIRMWARE_TAG }}`
          - **内核: ${{ env.VERSION_KERNEL }}**
          - 特性: 无WIFI, 有线NSS硬件加速
          - 默认地址与密码等由 `init-settings.sh` 脚本定义
          ### 🧊 源码信息
          - 固件源码: ${{ env.REPO_URL }}
          - 源码分支: ${{ env.REPO_BRANCH }}
          - 本次编译最后更新记录:
          - ${{ env.VERSION_INFO }}
